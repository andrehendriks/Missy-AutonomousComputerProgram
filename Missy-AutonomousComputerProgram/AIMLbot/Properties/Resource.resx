<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>The javascript tag is not implemented in this bot</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>). Please make sure that your aiml file end in a lowercase aiml extension, for example - myFile.aiml is valid but myFile.AIML is not.</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>The directory specified as the path to the AIML files (</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>) cannot be found by the AIMLLoader object. Please make sure the directory where you think the AIML files are to be found is the same as the directory specified in the settings file.</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>ERROR! An out of bounds index to topicstar was encountered when processing the input: </value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>ERROR! Attempted (but failed) to &lt;learn&gt; some new AIML from the following URI: </value>
  </data>
  <data name="String15" xml:space="preserve">
    <value>ERROR! An out of bounds index to thatstar was encountered when processing the input: </value>
  </data>
  <data name="String16" xml:space="preserve">
    <value>InputStar out of bounds reference caused by input: </value>
  </data>
  <data name="String17" xml:space="preserve">
    <value>Index set to non-integer value whilst processing star tag in response to the input: </value>
  </data>
  <data name="String18" xml:space="preserve">
    <value>A star tag tried to reference an empty InputStar collection when processing the input: </value>
  </data>
  <data name="String19" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>The system tag is not implemented in this bot</value>
  </data>
  <data name="String20" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String21" xml:space="preserve">
    <value>ERROR! An out of bounds index to thatstar was encountered when processing the input: </value>
  </data>
  <data name="String22" xml:space="preserve">
    <value>ERROR! A thatstar tag with a bady formed index (</value>
  </data>
  <data name="String23" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String24" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String25" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String26" xml:space="preserve">
    <value>ERROR! An out of bounds index to topicstar was encountered when processing the input: </value>
  </data>
  <data name="String27" xml:space="preserve">
    <value>ERROR! A thatstar tag with a bady formed index (</value>
  </data>
  <data name="String28" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String29" xml:space="preserve">
    <value>The bot could not find any response for the input: </value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>GOSSIP from user:</value>
  </data>
  <data name="String30" xml:space="preserve">
    <value>with the path(s): </value>
  </data>
  <data name="String31" xml:space="preserve">
    <value>from the user with an id: </value>
  </data>
  <data name="String32" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String33" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String34" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String35" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String36" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String37" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String38" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String39" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>, '</value>
  </data>
  <data name="String40" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String41" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String42" xml:space="preserve">
    <value>Processing AIML file: </value>
  </data>
  <data name="String43" xml:space="preserve">
    <value>ERROR! An input tag with a bady formed index (</value>
  </data>
  <data name="String44" xml:space="preserve">
    <value>) was encountered processing the input: </value>
  </data>
  <data name="String45" xml:space="preserve">
    <value>WARNING! Request timeout. User: </value>
  </data>
  <data name="String46" xml:space="preserve">
    <value>raw input: \"</value>
  </data>
  <data name="String47" xml:space="preserve">
    <value>\"</value>
  </data>
  <data name="String48" xml:space="preserve">
    <value>Missing pattern tag in a node found in</value>
  </data>
  <data name="String49" xml:space="preserve">
    <value>Missing template tag in the node with pattern:</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>'</value>
  </data>
  <data name="String50" xml:space="preserve">
    <value>found in</value>
  </data>
  <data name="String51" xml:space="preserve">
    <value>ERROR! Failed to load a new category into the graphmaster where the path =</value>
  </data>
  <data name="String52" xml:space="preserve">
    <value>and template =</value>
  </data>
  <data name="String53" xml:space="preserve">
    <value>produced by a category in the file:</value>
  </data>
  <data name="String54" xml:space="preserve">
    <value>WARNING! Attempted to load a new category with an empty pattern where the path =</value>
  </data>
  <data name="String55" xml:space="preserve">
    <value>and template =</value>
  </data>
  <data name="String56" xml:space="preserve">
    <value>produced by a category in the file:</value>
  </data>
  <data name="String57" xml:space="preserve">
    <value>WARNING! Request timeout. User:</value>
  </data>
  <data name="String58" xml:space="preserve">
    <value>raw input: \"</value>
  </data>
  <data name="String59" xml:space="preserve">
    <value>\" processing template: \"</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Starting to process AIML files found in the directory</value>
  </data>
  <data name="String60" xml:space="preserve">
    <value>\"</value>
  </data>
  <data name="String61" xml:space="preserve">
    <value>WARNING! A problem was encountered when trying to process the input: </value>
  </data>
  <data name="String62" xml:space="preserve">
    <value>with the template: \"</value>
  </data>
  <data name="String63" xml:space="preserve">
    <value>\"</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Finished processing the AIML files.</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>categories processed.</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Could not find any .aiml files in the specified directory (</value>
  </data>
</root>